services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      target: development
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
      - ./docker/app/php.ini:/usr/local/etc/php/conf.d/php.ini
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
    networks:
      - laravel_network
    depends_on:
      - mysql
      - redis

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      - laravel_network
    depends_on:
      - app

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - laravel_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: laravel_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel_network

  # Node.js for Asset Compilation
  node:
    image: node:18-alpine
    container_name: laravel_node
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    command: sh -c "npm install && npm run dev"
    networks:
      - laravel_network
    profiles:
      - development

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      target: development
    container_name: laravel_queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    networks:
      - laravel_network
    depends_on:
      - mysql
      - redis
    profiles:
      - production

  # Scheduler
  scheduler:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      target: development
    container_name: laravel_scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    command: >
      sh -c "while true; do
        php artisan schedule:run --verbose --no-interaction &
        sleep 60
      done"
    networks:
      - laravel_network
    depends_on:
      - mysql
      - redis
    profiles:
      - production

  # Mailhog for Email Testing
  mailhog:
    image: mailhog/mailhog
    container_name: laravel_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - laravel_network
    profiles:
      - development

volumes:
  mysql_data:
  redis_data:

networks:
  laravel_network:
    driver: bridge
