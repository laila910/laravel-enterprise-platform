# Simple CI Pipeline - Test Only (No Azure Deployment)
name: CI Tests Only

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: laravel_test
          MYSQL_USER: laravel
          MYSQL_PASSWORD: laravel
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, redis
          coverage: xdebug

      - name: Copy environment file
        run: |
          cp src/env.template src/.env
          sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=mysql/' src/.env
          sed -i 's/DB_HOST=mysql/DB_HOST=127.0.0.1/' src/.env
          sed -i 's/DB_DATABASE=laravel/DB_DATABASE=laravel_test/' src/.env
          sed -i 's/REDIS_HOST=redis/REDIS_HOST=127.0.0.1/' src/.env

      - name: Install Composer dependencies
        working-directory: ./src
        run: composer update --no-progress --prefer-dist --optimize-autoloader

      - name: Generate application key
        working-directory: ./src
        run: php artisan key:generate

      - name: Run database migrations
        working-directory: ./src
        run: php artisan migrate --force
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: laravel_test
          DB_USERNAME: laravel
          DB_PASSWORD: laravel

      - name: Run PHPUnit tests
        working-directory: ./src
        run: php artisan test --coverage-clover coverage.xml

      - name: Run PHP CS Fixer
        working-directory: ./src
        run: ./vendor/bin/php-cs-fixer fix --dry-run --diff --verbose
        continue-on-error: true

      - name: Run PHPStan
        working-directory: ./src
        run: ./vendor/bin/phpstan analyse
        continue-on-error: true

      - name: Build Docker Image (Test)
        run: docker build --target production -t laravel-test:latest -f docker/app/Dockerfile .

      - name: Test Docker Image
        run: |
          echo "âœ… Docker image built successfully!"
          docker images laravel-test:latest
